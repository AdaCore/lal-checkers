{
  "always": {
    "assign0": [
      {
        "trace:": [
          "assign0", 
          "start0"
        ], 
        "values": {
          "$stack": "({1: '[42, 42]'}, 0)",
          "B": "{False, True}",
          "P": "{[all-path]}",
          "R": "[-2147483648, 2147483647]"
        }
      }
    ],
    "assign1": [
      {
        "trace:": [
          "assign0",
          "assign1",
          "assume0",
          "read0",
          "read1",
          "read2",
          "start0"
        ],
        "values": {
          "$stack": "({1: '[42, 42]'}, 0)",
          "B": "{True}",
          "P": "{Subprogram <SubpBody [\"F\"] 5:4-8:10> capturing ()}",
          "R": "[-2147483648, 2147483647]"
        }
      }
    ],
    "assign2": [
      {
        "trace:": [
          "assign0",
          "assign2",
          "assume1",
          "read0",
          "read1",
          "read2",
          "start0"
        ],
        "values": {
          "$stack": "({1: '[42, 42]'}, 0)",
          "B": "{False}",
          "P": "{Subprogram <SubpBody [\"G\"] 10:4-13:10> capturing (0x00000001)}",
          "R": "[-2147483648, 2147483647]"
        }
      }
    ],
    "assign3": [
      {
        "trace:": [
          "assign0",
          "assign1",
          "assign2",
          "assign3",
          "assume0",
          "assume1",
          "assume2",
          "read0",
          "read1",
          "read2",
          "split_join0",
          "start0"
        ],
        "values": {
          "$stack": "({1: '[42, 42]'}, 0)",
          "B": "{False, True}",
          "P": "{Subprogram <SubpBody [\"F\"] 5:4-8:10> capturing (), Subprogram <SubpBody [\"G\"] 10:4-13:10> capturing (0x00000001)}",
          "R": "[-2147483648, 2147483647]"
        }
      }
    ],
    "assign4": [
      {
        "trace:": [
          "assign0",
          "assign1",
          "assign2",
          "assign3",
          "assign4",
          "assume0",
          "assume1",
          "assume2",
          "read0",
          "read1",
          "read2",
          "split_join0",
          "start0"
        ],
        "values": {
          "$stack": "({1: '[42, 42]'}, 0)",
          "B": "{False, True}",
          "P": "{Subprogram <SubpBody [\"F\"] 5:4-8:10> capturing (), Subprogram <SubpBody [\"G\"] 10:4-13:10> capturing (0x00000001)}",
          "R": "[-2147483648, 2147483647]"
        }
      }
    ],
    "assign5": [
      {
        "trace:": [
          "assign0",
          "assign1",
          "assign2",
          "assign3",
          "assign4",
          "assign5",
          "assume0",
          "assume1",
          "assume2",
          "read0",
          "read1",
          "read2",
          "split_join0",
          "start0"
        ],
        "values": {
          "$stack": "({1: '[42, 42]'}, 0)",
          "B": "{False, True}",
          "P": "{Subprogram <SubpBody [\"F\"] 5:4-8:10> capturing (), Subprogram <SubpBody [\"G\"] 10:4-13:10> capturing (0x00000001)}",
          "R": "[4, 45]"
        }
      }
    ],
    "assume0": [
      {
        "trace:": [
          "assign0",
          "assume0",
          "read0",
          "read1",
          "read2",
          "start0"
        ],
        "values": {
          "$stack": "({1: '[42, 42]'}, 0)",
          "B": "{True}",
          "P": "{[all-path]}",
          "R": "[-2147483648, 2147483647]"
        }
      }
    ],
    "assume1": [
      {
        "trace:": [
          "assign0",
          "assume1",
          "read0",
          "read1",
          "read2",
          "start0"
        ],
        "values": {
          "$stack": "({1: '[42, 42]'}, 0)",
          "B": "{False}",
          "P": "{[all-path]}",
          "R": "[-2147483648, 2147483647]"
        }
      }
    ],
    "assume2": [
      {
        "trace:": [
          "assign0",
          "assign1",
          "assign2",
          "assume0",
          "assume1",
          "assume2",
          "read0",
          "read1",
          "read2",
          "split_join0",
          "start0"
        ],
        "values": {
          "$stack": "({1: '[42, 42]'}, 0)",
          "B": "{False, True}",
          "P": "{Subprogram <SubpBody [\"F\"] 5:4-8:10> capturing (), Subprogram <SubpBody [\"G\"] 10:4-13:10> capturing (0x00000001)}",
          "R": "[-2147483648, 2147483647]"
        }
      }
    ],
    "read0": [
      {
        "trace:": [
          "assign0",
          "read0",
          "start0"
        ],
        "values": {
          "$stack": "({1: '[42, 42]'}, 0)",
          "B": "{False, True}",
          "P": "{[all-path]}",
          "R": "[-2147483648, 2147483647]"
        }
      }
    ],
    "read1": [
      {
        "trace:": [
          "assign0",
          "read0",
          "read1",
          "start0"
        ],
        "values": {
          "$stack": "({1: '[42, 42]'}, 0)",
          "B": "{False, True}",
          "P": "{[all-path]}",
          "R": "[-2147483648, 2147483647]"
        }
      }
    ],
    "read2": [
      {
        "trace:": [
          "assign0",
          "read0",
          "read1",
          "read2",
          "start0"
        ],
        "values": {
          "$stack": "({1: '[42, 42]'}, 0)",
          "B": "{False, True}",
          "P": "{[all-path]}",
          "R": "[-2147483648, 2147483647]"
        }
      }
    ],
    "split_join0": [
      {
        "trace:": [
          "assign0",
          "assign1",
          "assign2",
          "assume0",
          "assume1",
          "read0",
          "read1",
          "read2",
          "split_join0",
          "start0"
        ],
        "values": {
          "$stack": "({1: '[42, 42]'}, 0)",
          "B": "{False, True}",
          "P": "{Subprogram <SubpBody [\"F\"] 5:4-8:10> capturing (), Subprogram <SubpBody [\"G\"] 10:4-13:10> capturing (0x00000001)}",
          "R": "[-2147483648, 2147483647]"
        }
      }
    ],
    "start0": [
      {
        "trace:": [
          "start0"
        ],
        "values": {
          "$stack": "({}, 0)",
          "B": "{False, True}",
          "P": "{[all-path]}",
          "R": "[-2147483648, 2147483647]"
        }
      }
    ]
  },
  "le_t_eq_v": {
    "assign0": [
      {
        "trace:": [
          "assign0",
          "start0"
        ],
        "values": {
          "$stack": "({1: '[42, 42]'}, 0)",
          "B": "{False, True}",
          "P": "{[all-path]}",
          "R": "[-2147483648, 2147483647]"
        }
      }
    ],
    "assign1": [
      {
        "trace:": [
          "assign0",
          "assign1",
          "assume0",
          "read0",
          "read1",
          "read2",
          "start0"
        ],
        "values": {
          "$stack": "({1: '[42, 42]'}, 0)",
          "B": "{True}",
          "P": "{Subprogram <SubpBody [\"F\"] 5:4-8:10> capturing ()}",
          "R": "[-2147483648, 2147483647]"
        }
      }
    ],
    "assign2": [
      {
        "trace:": [
          "assign0",
          "assign2",
          "assume1",
          "read0",
          "read1",
          "read2",
          "start0"
        ],
        "values": {
          "$stack": "({1: '[42, 42]'}, 0)",
          "B": "{False}",
          "P": "{Subprogram <SubpBody [\"G\"] 10:4-13:10> capturing (0x00000001)}",
          "R": "[-2147483648, 2147483647]"
        }
      }
    ],
    "assign3": [
      {
        "trace:": [
          "assign0",
          "assign1",
          "assign3",
          "assume0",
          "assume2",
          "read0",
          "read1",
          "read2",
          "split_join0",
          "start0"
        ],
        "values": {
          "$stack": "({1: '[42, 42]'}, 0)",
          "B": "{True}",
          "P": "{Subprogram <SubpBody [\"F\"] 5:4-8:10> capturing ()}",
          "R": "[-2147483648, 2147483647]"
        }
      },
      {
        "trace:": [
          "assign0",
          "assign2",
          "assign3",
          "assume1",
          "assume2",
          "read0",
          "read1",
          "read2",
          "split_join0",
          "start0"
        ],
        "values": {
          "$stack": "({1: '[42, 42]'}, 0)",
          "B": "{False}",
          "P": "{Subprogram <SubpBody [\"G\"] 10:4-13:10> capturing (0x00000001)}",
          "R": "[-2147483648, 2147483647]"
        }
      }
    ],
    "assign4": [
      {
        "trace:": [
          "assign0",
          "assign1",
          "assign3",
          "assign4",
          "assume0",
          "assume2",
          "read0",
          "read1",
          "read2",
          "split_join0",
          "start0"
        ],
        "values": {
          "$stack": "({1: '[42, 42]'}, 0)",
          "B": "{True}",
          "P": "{Subprogram <SubpBody [\"F\"] 5:4-8:10> capturing ()}",
          "R": "[-2147483648, 2147483647]"
        }
      },
      {
        "trace:": [
          "assign0",
          "assign2",
          "assign3",
          "assign4",
          "assume1",
          "assume2",
          "read0",
          "read1",
          "read2",
          "split_join0",
          "start0"
        ],
        "values": {
          "$stack": "({1: '[42, 42]'}, 0)",
          "B": "{False}",
          "P": "{Subprogram <SubpBody [\"G\"] 10:4-13:10> capturing (0x00000001)}",
          "R": "[-2147483648, 2147483647]"
        }
      }
    ],
    "assign5": [
      {
        "trace:": [
          "assign0",
          "assign1",
          "assign3",
          "assign4",
          "assign5",
          "assume0",
          "assume2",
          "read0",
          "read1",
          "read2",
          "split_join0",
          "start0"
        ],
        "values": {
          "$stack": "({1: '[42, 42]'}, 0)",
          "B": "{True}",
          "P": "{Subprogram <SubpBody [\"F\"] 5:4-8:10> capturing ()}",
          "R": "[4, 4]"
        }
      },
      {
        "trace:": [
          "assign0",
          "assign2",
          "assign3",
          "assign4",
          "assign5",
          "assume1",
          "assume2",
          "read0",
          "read1",
          "read2",
          "split_join0",
          "start0"
        ],
        "values": {
          "$stack": "({1: '[42, 42]'}, 0)",
          "B": "{False}",
          "P": "{Subprogram <SubpBody [\"G\"] 10:4-13:10> capturing (0x00000001)}",
          "R": "[45, 45]"
        }
      }
    ],
    "assume0": [
      {
        "trace:": [
          "assign0",
          "assume0",
          "read0",
          "read1",
          "read2",
          "start0"
        ],
        "values": {
          "$stack": "({1: '[42, 42]'}, 0)",
          "B": "{True}",
          "P": "{[all-path]}",
          "R": "[-2147483648, 2147483647]"
        }
      }
    ],
    "assume1": [
      {
        "trace:": [
          "assign0",
          "assume1",
          "read0",
          "read1",
          "read2",
          "start0"
        ],
        "values": {
          "$stack": "({1: '[42, 42]'}, 0)",
          "B": "{False}",
          "P": "{[all-path]}",
          "R": "[-2147483648, 2147483647]"
        }
      }
    ],
    "assume2": [
      {
        "trace:": [
          "assign0",
          "assign1",
          "assume0",
          "assume2",
          "read0",
          "read1",
          "read2",
          "split_join0",
          "start0"
        ],
        "values": {
          "$stack": "({1: '[42, 42]'}, 0)",
          "B": "{True}",
          "P": "{Subprogram <SubpBody [\"F\"] 5:4-8:10> capturing ()}",
          "R": "[-2147483648, 2147483647]"
        }
      },
      {
        "trace:": [
          "assign0",
          "assign2",
          "assume1",
          "assume2",
          "read0",
          "read1",
          "read2",
          "split_join0",
          "start0"
        ],
        "values": {
          "$stack": "({1: '[42, 42]'}, 0)",
          "B": "{False}",
          "P": "{Subprogram <SubpBody [\"G\"] 10:4-13:10> capturing (0x00000001)}",
          "R": "[-2147483648, 2147483647]"
        }
      }
    ],
    "read0": [
      {
        "trace:": [
          "assign0",
          "read0",
          "start0"
        ],
        "values": {
          "$stack": "({1: '[42, 42]'}, 0)",
          "B": "{False, True}",
          "P": "{[all-path]}",
          "R": "[-2147483648, 2147483647]"
        }
      }
    ],
    "read1": [
      {
        "trace:": [
          "assign0",
          "read0",
          "read1",
          "start0"
        ],
        "values": {
          "$stack": "({1: '[42, 42]'}, 0)",
          "B": "{False, True}",
          "P": "{[all-path]}",
          "R": "[-2147483648, 2147483647]"
        }
      }
    ],
    "read2": [
      {
        "trace:": [
          "assign0",
          "read0",
          "read1",
          "read2",
          "start0"
        ],
        "values": {
          "$stack": "({1: '[42, 42]'}, 0)",
          "B": "{False, True}",
          "P": "{[all-path]}",
          "R": "[-2147483648, 2147483647]"
        }
      }
    ],
    "split_join0": [
      {
        "trace:": [
          "assign0",
          "assign1",
          "assume0",
          "read0",
          "read1",
          "read2",
          "split_join0",
          "start0"
        ],
        "values": {
          "$stack": "({1: '[42, 42]'}, 0)",
          "B": "{True}",
          "P": "{Subprogram <SubpBody [\"F\"] 5:4-8:10> capturing ()}",
          "R": "[-2147483648, 2147483647]"
        }
      },
      {
        "trace:": [
          "assign0",
          "assign2",
          "assume1",
          "read0",
          "read1",
          "read2",
          "split_join0",
          "start0"
        ],
        "values": {
          "$stack": "({1: '[42, 42]'}, 0)",
          "B": "{False}",
          "P": "{Subprogram <SubpBody [\"G\"] 10:4-13:10> capturing (0x00000001)}",
          "R": "[-2147483648, 2147483647]"
        }
      }
    ],
    "start0": [
      {
        "trace:": [
          "start0"
        ],
        "values": {
          "$stack": "({}, 0)",
          "B": "{False, True}",
          "P": "{[all-path]}",
          "R": "[-2147483648, 2147483647]"
        }
      }
    ]
  }
}